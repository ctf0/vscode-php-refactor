{
    "name": "vscode-php-refactor",
    "displayName": "PHP-Refactor",
    "version": "0.2.0",
    "publisher": "ctf0",
    "icon": "images/icon.png",
    "engines": {
        "vscode": "^1.90.0"
    },
    "categories": [
        "Other"
    ],
    "keywords": [
        "php",
        "refactor"
    ],
    "activationEvents": [
        "onLanguage:php"
    ],
    "repository": "https://github.com/ctf0/vscode-php-refactor",
    "main": "./out/main",
    "contributes": {
        "submenus": [
            {
                "id": "phprefactor.editor.context",
                "label": "PHP Refactor"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "phprefactor.extract_to_function",
                    "when": "editorLangId == php && editorHasSelection && !editorHasMultipleSelections"
                },
                {
                    "command": "phprefactor.copy_to_function",
                    "when": "editorLangId == php && editorHasSelection && !editorHasMultipleSelections"
                },
                {
                    "command": "phprefactor.extract_to_property",
                    "when": "editorLangId == php && editorHasSelection"
                },
                {
                    "command": "phprefactor.add_new_property",
                    "when": "editorLangId == php && !editorHasSelection"
                },
                {
                    "command": "phprefactor.add_phpdoc",
                    "when": "editorLangId == php && !editorHasSelection"
                }
            ],
            "editor/context": [
                {
                    "submenu": "phprefactor.editor.context",
                    "group": "phprefactor"
                }
            ],
            "phprefactor.editor.context": [
                {
                    "command": "phprefactor.extract_to_function",
                    "when": "editorLangId == php && editorHasSelection && !editorHasMultipleSelections",
                    "group": "phprefactor"
                },
                {
                    "command": "phprefactor.copy_to_function",
                    "when": "editorLangId == php && editorHasSelection && !editorHasMultipleSelections",
                    "group": "phprefactor"
                },
                {
                    "command": "phprefactor.extract_to_property",
                    "when": "editorLangId == php && editorHasSelection",
                    "group": "phprefactor"
                },
                {
                    "command": "phprefactor.add_new_property",
                    "when": "editorLangId == php && !editorHasSelection"
                }
            ]
        },
        "keybindings": [
            {
                "command": "phprefactor.add_phpdoc",
                "key": "ctrl+enter",
                "mac": "ctrl+enter",
                "when": "editorLangId == php && !editorHasSelection"
            }
        ],
        "commands": [
            {
                "command": "phprefactor.extract_to_function",
                "title": "Extract To Method/Function",
                "category": "PHP Refactor"
            },
            {
                "command": "phprefactor.copy_to_function",
                "title": "Copy To Method/Function",
                "category": "PHP Refactor"
            },
            {
                "command": "phprefactor.extract_to_property",
                "title": "Extract To Property",
                "category": "PHP Refactor"
            },
            {
                "command": "phprefactor.add_new_property",
                "title": "Add New Property",
                "category": "Php Refactor"
            },
            {
                "command": "phprefactor.add_phpdoc",
                "title": "Add PhpDoc (alias to 'intelephense.phpdoc.add')",
                "category": "Php Refactor"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "PHP Refactor",
            "properties": {
                "phpRefactor.enableCodeActions": {
                    "type": "boolean",
                    "default": true,
                    "description": "enable code actions"
                },
                "phpRefactor.showReadonly": {
                    "type": "boolean",
                    "default": false,
                    "description": "add php 8.1 readonly to property snippet"
                },
                "phpRefactor.updateFileAndReferenceOnRename": {
                    "type": "boolean",
                    "default": true,
                    "description": "update file content & its reference everywhere when renamed/moved"
                },
                "phpRefactor.excludeList": {
                    "type": "array",
                    "default": [
                        "**/vendor/**",
                        "**/node_modules/**",
                        "**/public/**",
                        "**/cache/**",
                        "**/storage/**",
                        "**/*.blade.php"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true,
                    "markdownDescription": "list of globs to ignore when replacing"
                },
                "phpRefactor.magicMethods": {
                    "type": "array",
                    "default": [
                        "__construct",
                        "__invoke",
                        "__toString"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true,
                    "markdownDescription": "magic methods list\n`[\n__construct,\n__destruct,\n__call,\n__callStatic,\n__get,\n__set,\n__isset,\n__unset,\n__sleep,\n__wakeup,\n__serialize,\n__unserialize,\n__toString,\n__invoke,\n__set_state,\n__clone,\n__debugInfo\n]`"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run esbuild-base -- --pure:console.log --minify",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "watch": "npm run esbuild"
    },
    "devDependencies": {
        "@types/fs-extra": "^11.0.4",
        "@types/node": "^24.2.0",
        "@types/vscode": "^1.90.0",
        "esbuild": "^0.25.8",
        "typescript": "^5.9.2"
    },
    "dependencies": {
        "escape-string-regexp": "^5.0.0",
        "fast-glob": "^3.3.3",
        "fs-extra": "^11.3.1",
        "lodash.set": "^4.3.2",
        "lodash.throttle": "^4.1.1",
        "php-parser": "^3.2.5",
        "replace-in-file": "^8.3.0"
    },
    "extensionDependencies": [
        "bmewburn.vscode-intelephense-client",
        "ctf0.php-namespace-resolver"
    ]
}
